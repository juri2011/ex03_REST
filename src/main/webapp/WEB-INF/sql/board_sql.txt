-- foreign key로 연결된 데이터까지 삭제하는 방법
drop table tbl_board CASCADE CONSTRAINTS;

-- sequence 삭제
drop sequence seq_board;
-- sequence 생성
create sequence seq_board;

-- 테이블 생성
create table tbl_board(
    bno number(10,0),
    title varchar2(200) not null,
    content varchar2(2000) not null,
    writer varchar2(50) not null,
    regdate date default sysdate,
    updatedate date default sysdate
);
-- 테이블 구조 확인
desc tbl_board;

-- primary key지정
alter table tbl_board add constraint pk_board
primary key (bno);

-- 더미 데이터 삽입
insert into tbl_board(bno, title, content, writer)
values(seq_board.nextval, '테스트 제목', '테스트 내용', 'user00');

-- oracle 다중 insert 문
insert all
into tbl_board(bno, title, content, writer) values(seq_board.nextval, '테스트 제목2', '테스트 내용2', 'user02')
into tbl_board(bno, title, content, writer) values(seq_board.nextval, '테스트 제목3', '테스트 내용3', 'user03')
into tbl_board(bno, title, content, writer) values(seq_board.nextval, '테스트 제목4', '테스트 내용4', 'user04')
into tbl_board(bno, title, content, writer) values(seq_board.nextval, '테스트 제목5', '테스트 내용5', 'user05')
into tbl_board(bno, title, content, writer) values(seq_board.nextval, '테스트 제목6', '테스트 내용6', 'user06')
into tbl_board(bno, title, content, writer) values(seq_board.nextval, '테스트 제목7', '테스트 내용7', 'user07')
select * from dual;

-- 데이터 전체 확인
select * from tbl_board where bno>0;

-- 데이터 전체 개수 확인
select count(*) from tbl_board;

create table tbl_reply(
    rno number(10,0),
    bno number(10,0) not null,
    reply varchar2(1000) not null,
    replyer varchar2(50) not null,
    replyDate date default sysdate,
    updateDate date default sysdate
);
create sequence seq_reply;

alter table tbl_reply add constraint pk_reply primary key(rno);
alter table tbl_reply add constraint fk_reply_board foreign key(bno)
references tbl_board(bno);

desc tbl_reply;

select * from tbl_board where rownum < 10 order by bno desc;

select * from tbl_reply order by rno desc;

select * from myfile;
insert into tbl_reply (rno, bno, reply, replyer)
values (seq_reply.nextval, 1024, '어서오세요. 환영합니다^^', 'user00');

insert into tbl_reply (rno, bno, reply, replyer)
select seq_reply.nextval, bno, reply, replyer from tbl_reply where bno = 1024;

insert into tbl_reply (rno, bno, reply, replyer, replyDate)
values (seq_reply.nextval, 1024, '첫번째 댓글이지만 사실 아닌 댓글', 'user01', to_date('03-22-2024 11:11:11','MM-DD-YYYY HH24:MI:SS'));

-- 인덱스 생성(가장 낮은 rno을 가진 데이터가 1번)
create index idx_reply on tbl_reply(bno desc, rno asc);

select rno, bno, reply, replyer, replyDate, updateDate
from(
    select /*+INDEX(tbl_reply idx_reply)*/
    rownum rn, bno, rno, reply, replyer, replyDate, updateDate
    from tbl_reply
    where bno = 1024
        and rno > 0
        and rownum <= 20
) where rn > 10;

select * from tbl_reply where bno = 1024;

select count(*) from tbl_reply where bno = 1024;

-- 커밋
commit;